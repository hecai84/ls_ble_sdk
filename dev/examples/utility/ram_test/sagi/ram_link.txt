MEMORY
{
  RAM (rwx) : ORIGIN = 0x400000, LENGTH = 0x10000
}

SECTIONS
{
    .vector :
    {
        . = ALIGN(4);
        PROVIDE(__vector__start__ = .);
        PROVIDE(__vector__end__ = .);    
        KEEP(*(.vectors))
    }>RAM 
    .text :
    {
        KEEP(*(.init))
        KEEP(*(.fini))

/* 
        *crtbegin.o(.ctors)
        *crtbegin?.o(.ctors)
        *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
        *(SORT(.ctors.*))
        *(.ctors)


         *crtbegin.o(.dtors)
         *crtbegin?.o(.dtors)
         *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
         *(SORT(.dtors.*))
         *(.dtors)
*/
        *(.eh_frame*)
        *(.text* .rodata* .srodata*)
    }
    PROVIDE(__data_lma__ = .);
    .data :
    {
        . = ALIGN(4);
        PROVIDE(__data_start__ = .);
        PROVIDE(__data_end__ = .);        
        *(.sdata*)
        *(.data*)
        *(.xip_banned)
        . = ALIGN(4);
    }
    .bss (NOLOAD):
    {
        __bss_start__ = ALIGN(4);
        PROVIDE(_edata = __bss_start__);
        *(.sbss*)
        *(.bss*)
        *(COMMON)
        *(SECTION_RTT)
        __bss_end__ = .;
        PROVIDE(_end = __bss_end__);
        PROVIDE(end = .);
    }
    /* Set stack top to end of RAM, and stack limit move down by
     * size of stack_dummy section */
    __StackTop = ORIGIN(RAM) + LENGTH(RAM);
    PROVIDE(__stack = __StackTop);
    
}